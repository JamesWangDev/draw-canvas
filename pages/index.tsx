import Main from "@/components/Main";
import { useColorModeValue } from "@chakra-ui/color-mode";
import { Box, Heading, Stack, Text, VStack } from "@chakra-ui/layout";
import Head from "next/head";
import Image from "next/image";
import dynamic from "next/dynamic";
import { ReactSketchCanvasProps } from "react-sketch-canvas";
import { useRef, useState, forwardRef } from "react";
import CanvasControl from "@/components/CanvasControl";
//todo: fix type definition
const ReactSketchCanvas = dynamic<ReactSketchCanvasProps>(
  () => import("react-sketch-canvas").then((c) => c.ReactSketchCanvas),
  {
    ssr: false,
  }
);
const Canvas = forwardRef((props, ref) => (
  // @ts-ignore
  <ReactSketchCanvas {...props} ref={ref} />
));

export default function Index() {
  const invertColor = useColorModeValue("none", "invert(10%) brightness(120%)");
  const [color, setColor] = useState("rgba(255, 0, 0, 0.5)");
  const [strokeWidth, setWidth] = useState(4);
  const canvasRef = useRef(null);
  const clearHandler = () => {
    // @ts-ignore
    canvasRef.current?.retry();
    const clearCanvas = canvasRef.current?.clearCanvas;

    if (clearCanvas) {
      clearCanvas();
    }
  };
  return (
    <Main
      justifyContent={["start", "center"]}
      sx={{ cursor: "url('/pencil.png') 0 24, auto" }}
    >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Canvas
        ref={canvasRef}
        width="100vw"
        height="100vh"
        background="transparent"
        style={{
          position: "absolute",
          top: 0,
          left: 0,
          zIndex: 2,
        }}
        strokeWidth={strokeWidth}
        strokeColor={color}
      />
      <CanvasControl
        clearCanvas={clearHandler}
        color={color}
        setColor={setColor}
        strokeWidth={strokeWidth}
        setWidth={setWidth}
      />
      <Stack
        className="noselect"
        direction={["column-reverse", "row"]}
        justifyContent="space-between"
      >
        <VStack alignItems={["center", "start"]} justifyContent="center">
          <Box>
            <Heading mb="0">Hi, I'm Wisesa. üê±</Heading>
            <Text
              textAlign={["center", "left"]}
              mt="-5px"
              fontSize="sm"
              fontStyle="italic"
            >
              aka. svspicious
            </Text>
          </Box>
          <Text textAlign={["center", "left"]} maxW="550px">
            A student and a software <i>edgy</i>neer. I love exploring new
            technology and now fall in love with react.js and javascript.
          </Text>
        </VStack>
        <Box filter={invertColor}>
          <Image src="/me.svg" width="400px" height="400px" />
        </Box>
      </Stack>
    </Main>
  );
}
